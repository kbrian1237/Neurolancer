# Generated by Django 5.2.5 on 2025-09-06 14:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0019_userprofile_password_reset_sent_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('subject', models.CharField(max_length=200)),
                ('newsletter_type', models.CharField(choices=[('weekly_digest', 'Weekly Digest'), ('platform_updates', 'Platform Updates'), ('featured_gigs', 'Featured Gigs'), ('learning_spotlight', 'Learning Spotlight'), ('success_stories', 'Success Stories'), ('tips_tricks', 'Tips & Tricks'), ('announcement', 'Special Announcement'), ('promotional', 'Promotional')], default='weekly_digest', max_length=20)),
                ('content', models.TextField(help_text='HTML content of the newsletter')),
                ('plain_text_content', models.TextField(blank=True, help_text='Plain text version')),
                ('preview_text', models.CharField(blank=True, help_text='Email preview text', max_length=150)),
                ('header_image', models.ImageField(blank=True, null=True, upload_to='newsletter_images/')),
                ('header_image_url', models.URLField(blank=True, null=True)),
                ('target_audience', models.CharField(choices=[('all', 'All Subscribers'), ('clients', 'Clients Only'), ('freelancers', 'Freelancers Only'), ('new_users', 'New Users (Last 30 days)'), ('active_users', 'Active Users'), ('custom', 'Custom Segment')], default='all', max_length=20)),
                ('custom_filter', models.JSONField(blank=True, default=dict, help_text='Custom audience filter criteria')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('cancelled', 'Cancelled')], default='draft', max_length=15)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.IntegerField(default=0)),
                ('total_sent', models.IntegerField(default=0)),
                ('total_delivered', models.IntegerField(default=0)),
                ('total_opened', models.IntegerField(default=0)),
                ('total_clicked', models.IntegerField(default=0)),
                ('total_bounced', models.IntegerField(default=0)),
                ('total_unsubscribed', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_newsletters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content_type', models.CharField(choices=[('featured_gig', 'Featured Gig'), ('success_story', 'Success Story'), ('tip', 'Tip & Trick'), ('platform_update', 'Platform Update'), ('course_highlight', 'Course Highlight'), ('freelancer_spotlight', 'Freelancer Spotlight'), ('client_story', 'Client Story'), ('industry_news', 'Industry News'), ('custom', 'Custom Content')], max_length=20)),
                ('summary', models.TextField(help_text='Brief summary for newsletter inclusion')),
                ('full_content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='newsletter_content/')),
                ('image_url', models.URLField(blank=True, null=True)),
                ('link_url', models.URLField(blank=True, help_text='Call-to-action link')),
                ('link_text', models.CharField(blank=True, default='Read More', max_length=100)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('tags', models.TextField(blank=True, help_text='Comma-separated tags')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='newsletter_content', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('unsubscribed', 'Unsubscribed'), ('bounced', 'Bounced'), ('complained', 'Complained')], default='active', max_length=15)),
                ('source', models.CharField(choices=[('website', 'Website Footer'), ('registration', 'User Registration'), ('checkout', 'Order Checkout'), ('profile', 'User Profile'), ('manual', 'Manual Addition'), ('import', 'Bulk Import')], default='website', max_length=15)),
                ('interests', models.TextField(blank=True, help_text='Comma-separated list of interests')),
                ('user_type_preference', models.CharField(choices=[('all', 'All Content'), ('client', 'Client-focused Content'), ('freelancer', 'Freelancer-focused Content'), ('learning', 'Learning & Development'), ('platform_updates', 'Platform Updates')], default='all', max_length=20)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('unsubscribe_token', models.CharField(blank=True, max_length=100, unique=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('verification_token', models.CharField(blank=True, max_length=100)),
                ('verification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('last_email_sent', models.DateTimeField(blank=True, null=True)),
                ('email_open_count', models.IntegerField(default=0)),
                ('email_click_count', models.IntegerField(default=0)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newsletter_subscription', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-subscribed_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('template_type', models.CharField(choices=[('weekly_digest', 'Weekly Digest'), ('platform_updates', 'Platform Updates'), ('featured_content', 'Featured Content'), ('promotional', 'Promotional'), ('announcement', 'Announcement'), ('welcome', 'Welcome Email'), ('custom', 'Custom Template')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('html_content', models.TextField(help_text='HTML template with placeholders')),
                ('css_styles', models.TextField(blank=True, help_text='Custom CSS styles')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='newsletter_templates/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='newsletter_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterSendLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('bounced', 'Bounced'), ('complained', 'Complained'), ('unsubscribed', 'Unsubscribed'), ('failed', 'Failed')], default='pending', max_length=15)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('bounced_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('tracking_id', models.CharField(blank=True, max_length=100, unique=True)),
                ('newsletter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='send_logs', to='api.newsletter')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_logs', to='api.newslettersubscriber')),
            ],
            options={
                'ordering': ['-sent_at'],
                'unique_together': {('newsletter', 'subscriber')},
            },
        ),
    ]
